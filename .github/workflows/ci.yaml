
# CI for frontend service


name: frontend-ci

on: 
  push:
    branches:
      - '**' 
  pull_request:
        branches:
        - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - name: checkout code
          uses: actions/checkout@v4

        - name: Setup Nodejs 20
          uses: actions/setup-node@v4
          with:
            node-version: 20
        

        - name: Install dependencies
          run: |
              cd src/frontend
              npm ci  # Faster and more reliable for CI than `npm install`
        
        - name: Install protoc
          run: |
                sudo apt update
                sudo apt install -y protobuf-compiler
                protoc --version  # Optional: verify installation
        
        - name: Generate protos
          run: |
                cd src/frontend
                npm run grpc:generate
            
          
        - name: Build
          run: |
              cd src/frontend
              npm run build  # Only if you have a build script in package.json
          
        - name: Run Unit Tests
          run: |
              cd src/frontend
              npm test
             
       

    code-quality:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Node.js 20
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Install dependencies
          run: |
           cd src/frontend
           npm ci

        - name: Run ESLint
          run: |
           cd src/frontend
           npx eslint .
  
   

    docker:
        runs-on: ubuntu-latest

        needs: build

        steps:
        - name: checkout code
          uses: actions/checkout@v4

        - name: Install Docker
          uses: docker/setup-buildx-action@v1
        
        - name: Login to Docker
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_TOKEN }}

        - name: Docker Push
          uses: docker/build-push-action@v6
          with:
            context: src/frontend
            file: src/frontend/Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/frontend:${{github.run_id}}

    
    updatek8s:
        runs-on: ubuntu-latest

        needs: docker

        steps:
        - name: checkout code
          uses: actions/checkout@v4
          with:
            token: ${{ secrets.GITHUB_TOKEN }}

        - name: Update tag in kubernetes deployment manifest
          run: | 
               sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/frontend:${{github.run_id}}|" kubernetes/frontend/deploy.yaml
        
        - name: Commit and push changes
          run: |
            git config --global user.email "shwetha.na88@gmail.com"
            git config --global user.name "shwethaanandram"
            git add kubernetes/frontend/deploy.yaml
            git commit -m "[CI]: Update frontend image tag"
            git push origin HEAD:main -f

        
        
          


        
