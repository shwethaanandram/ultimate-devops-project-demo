name: CI Pipeline for All Services with Docker Compose + ArgoCD

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set environment variables for all services
        run: |
          # your .env creation logic
          echo "..."

      - name: Debug product-catalog build context
        run: |
          echo "üì¶ Listing product-catalog directory:"
          ls -al src/product-catalog
          echo "üìÑ Contents of go.mod:"
          cat src/product-catalog/go.mod || echo "‚ùå go.mod not found"
          echo "üìÑ Contents of go.sum:"
          cat src/product-catalog/go.sum || echo "‚ùå go.sum not found"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Debug ‚Äì List Dockerfiles
        run: |
          echo "üîç Verifying Dockerfiles from .env"
          grep _DOCKERFILE= .env | while IFS='=' read -r key path; do
            echo "$key -> $path"
            if [ -f "$path" ]; then
              echo "‚úÖ Found $path"
            else
              echo "‚ùå Missing $path"
            fi
          done

      - name: Build and Push All Microservices
        run: |
          docker-compose --env-file .env build

          for svc in $(docker-compose --env-file .env config --services); do
            tag="${{ secrets.DOCKER_USERNAME }}/${svc}:${{ github.run_id }}"
            image_id=$(docker images -q $svc)
            echo "üì¶ Tagging and pushing $svc as $tag"
            docker tag "$image_id" "$tag"
            docker push "$tag"
          done

      - name: Update Kubernetes Manifest File
        run: |
          for svc in $(docker-compose --env-file .env config --services); do
            sed -i "s|image: .*/${svc}:.*|image: ${{ secrets.DOCKER_USERNAME }}/${svc}:${{ github.run_id }}|g" kubernetes/complete-deploy.yml
          done

      - name: Commit and Push Updated Manifest
        run: |
          git config --global user.name "shwethaanandram"
          git config --global user.email "shwetha.na88@gmail.com"

          if git diff --quiet kubernetes/complete-deploy.yml; then
            echo "üü¢ No changes to commit in manifest."
          else
            git add kubernetes/complete-deploy.yml
            git commit -m "[CI] Updated image tags for all microservices"
            git push origin HEAD
          fi
